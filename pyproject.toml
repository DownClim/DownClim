[project]
authors = [
  { name = "Sylvain Schmidt", email = "sylvain.schmidt@cirad.fr" },
  { name = "Thomas Arsouze", email = "thomas.arsouze@cirad.fr" },
  { name = "Ghislain Vieilledent", email = "ghislain.vieilledent@cirad.fr" }
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
description = "Tool for dynamical downscaling climate projections."
dynamic = ["version"]
keywords = [
  "climate",
  "downscaling",
  "CMIP",
  "CORDEX",
  "dynamical downscaling",
  "climate projections",
  "climate models",
]
license = { text = "MIT" }
name = "downclim"
readme = "README.md"
requires-python = ">=3.10"

dependencies = [
  "aenum",
  "numpy",
  "geopandas",
  "pandas",
  "xarray",
  "xesmf>=0.8.7",
  "xee",
  "esgf-pyclient",
  "gcsfs",
  "earthengine-api",
  "pydantic",
  "pygadm",
  "rioxarray",
  "zarr",
]

[project.optional-dependencies]
test = [
  "pytest >=6",
  "pytest-cov >=3",
  "shapely",
]
dev = [
  "pytest >=6",
  "pytest-cov >=3",
]
docs = [
  "sphinx>=7.0",
  "myst_parser>=0.13",
  "sphinx_copybutton",
  "sphinx_autodoc_typehints",
  "furo>=2023.08.17",
  "sphinx-sitemap",
  "nbsphinx",
  "sphinx-design",
]

[project.urls]
Homepage = "https://github.com/DownClim/DownClim"
"Bug Tracker" = "https://github.com/DownClim/DownClim/issues"
Discussions = "https://github.com/DownClim/DownClim/discussions"
Changelog = "https://github.com/DownClim/DownClim/releases"

[build-system]
requires = ["setuptools>=61", "setuptools_scm[toml]>=7"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]


[tool.coverage]
run.source = ["downclim"]
report.exclude_also = [
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.10"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "downclim.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "aenum.*",
    "geopandas.*",
    "pandas.*",
    "ee.*",
    "pygadm.*",
    "rioxarray.*",
    "xarray.*",
    "xesmf.*",
    "xee.*",
    "esgf_pyclient.*",
    "gcsfs.*",
    "earthengine.*",
    "zarr.*",
    "multiprocess.*",
    "nox.*",
    "yaml.*"
]
ignore_missing_imports = true

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
]
ignore = [
  "T201",     # print() used
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["downclim._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"resources/rules/**" = ["T20"]
"tests/**" = ["T20"]
"noxfile.py" = ["T20"]


[tool.pylint]
py-version = "3.8"
ignore-paths = [".*/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "missing-function-docstring",
  "wrong-import-position",
]
